.\" -*- nroff -*-
.\" Licensed under the OpenIB.org BSD license (FreeBSD Variant) - See COPYING.md
.\"
.TH UMAD_GET_SMI_GSI_PAIRS 3  "Dec 1, 2024" "OpenIB" "OpenIB Programmer's Manual"
.SH "NAME"
umad_get_smi_gsi_pairs \- get cas as SMI/GSI pairs
.SH "SYNOPSIS"
.nf
.B #include <infiniband/umad.h>
.sp
.BI "int umad_get_smi_gsi_pairs(struct umad_ca_pair " "cas[]" ", size_t " "max" );
.fi
.SH "DESCRIPTION"
.B umad_get_smi_gsi_pairs()
fill a user allocated array of struct
.I umad_ca_pair\fr
it fills up to
.I max
devices
The argument
.I cas
is an array of
.I struct umad_ca_pair as specified in  <infiniband/umad.h>.
.PP
.nf
struct umad_ca_pair {
.in +1
char smi_name[UMAD_CA_NAME_LEN];
.in +0
uint32_t smi_preferred_port;
.in +0
char gsi_name[UMAD_CA_NAME_LEN];
.in +0
uint32_t gsi_preferred_port;
.in -2
} umad_ca_pair;
.nf
.fi
.PP

smi_preferred_port/gsi_preferred_port are the first ports found active for SMI/GSI device

.SH "RETURN VALUE"
.B umad_get_smi_gsi_pairs()
returns the number of devices filled,
or -1 on error.

.SH "AUTHORS"
.TP
Asaf Mazor <amazor@nvidia.com>
